function z = z_of_t(t,z_now,data)

% This function calculates what depth a sample is at some time in the
% past in an eroding-till-over-sublimating-ice scenario. To calculate this,
% you need to know the following background information:
% 
% 1. Sublimation rate of the ice (cm/yr).
% 2. Erosion rate of the till (g/cm2/yr).
% 3. Age of ice emplacement, which = beginning of till development (Myr).
% 4. How deep the sample is now (g/cm2).
% 5. How thick the till is now (g/cm2). 
%
% Also there are some rules. For example, the erosion rate has to be lower
% than the sublimation rate. 
%
% Syntax: z = z_of_t(t,z_now,data)
% where t is the time before present you want to know z at,
% z_now is the present depth below the surface of the sample (g/cm2),
% and data contains info about the sublimation model parameters, e.g. 
% rates, times, etc., and is generated by sublimation_model_params.m.
%
% returns z, the depth (g/cm2) of the sample at time t before present. 
% Works for vector t, returns vector z. 
% 
% Greg Balco
% June, 2019

% Error checking

if t > data.T; error('z_of_t.m: age older than emplacement age');end

% Determine whether or not the sample is in the till, and act accordingly. 

if z_now > data.Ztill
    % Case 1, sample is in ice. This is the easy case, because it's only
    % experienced one erosion rate since emplacement. 
    % The depth at time t is just the depth now plus the sum of ice and
    % till erosion rates times t
    z = z_now + data.ET.*t + data.s.*(1-data.CD).*data.rhoM.*t;
else
    % Case 2, sample is in the till. This is the hard case, because you need
    % to go back to when it was added to the till at one erosion rate, and
    % then go back down in the ice at a higher erosion rate. 
    % How long has it been in the till?
    Ttill = (data.Ztill-z_now)./ (data.s.*data.CDrhoM);
    % Is it in the till at T?
    in_till = (t <= Ttill); % logical indexing
    % Case 2a, sample is in the till at t; then we just go back at the till
    % erosion rate
    z(in_till) = z_now + data.ET.*t(in_till);    
    % Case 2b, sample is in the ice at t; 
    % At t = Ttill, it was at z = data.Ztill + data.ET.*t
    % then before that, need to add ice lost in time between t and Ttill
    z(~in_till) = z_now + data.ET.*Ttill + (t(~in_till)-Ttill).*(data.s.*(1-data.CD).*data.rhoM + data.ET);
    end
end

